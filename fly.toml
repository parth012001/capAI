# Fly.io configuration with STRICT memory limits
app = "chief-ai-safe"
primary_region = "lax"

[build]

[env]
  NODE_ENV = "production"
  PORT = "3000"

[http_service]
  internal_port = 3000
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 1
  processes = ["app"]

  # Health check configuration
  [http_service.checks]
    [http_service.checks.health]
      grace_period = "30s"
      interval = "15s"
      method = "GET"
      path = "/health/ready"
      timeout = "5s"
      
    [http_service.checks.memory]
      grace_period = "10s"
      interval = "30s"
      method = "GET"
      path = "/health/ready"
      timeout = "3s"

[[vm]]
  # STRICT LIMITS: App dies before expensive scaling
  memory = '512mb'    # Hard limit - app crashes if exceeded
  cpu_kind = 'shared'
  cpus = 1

  # Auto-restart on crashes (memory leaks cause crashes = auto-fix!)
  [[vm.processes]]
    name = "app"
    entrypoint = ["dumb-init", "--"]
    cmd = ["node", "dist/index.js"]
    
    # Kill process if memory usage > 400MB (before hitting 512MB limit)
    [[vm.processes.checks]]
      type = "tcp"
      interval = "15s"
      timeout = "2s"
      grace_period = "5s"

# Automatic machine management
[deploy]
  release_command = "echo 'Deployment starting with memory monitoring'"
  strategy = "bluegreen"

# Log configuration
[logs]
  level = "info"

# COST PROTECTION: Machines stop when idle (saves money!)
[auto_stop_machines]
  enabled = true
  min_machines_running = 1