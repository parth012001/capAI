// BACKUP: Original PUT /auto-drafts/:id endpoint (working version)
// Date: 2025-09-13
// Purpose: Backup before adding learning system integration

// PUT /auto-drafts/:id - Edit draft content (triggers learning system)
app.put('/auto-drafts/:id', authMiddleware.authenticate, async (req, res) => {
  try {
    const draftId = parseInt(req.params.id);
    const { subject, body, status } = req.body;
    const userId = req.userId;
    
    if (!userId) {
      return res.status(401).json({ error: 'User authentication required' });
    }
    
    const existingDraft = await autoGeneratedDraftModel.getDraftById(draftId);
    if (!existingDraft) {
      return res.status(404).json({ error: 'Auto-generated draft not found' });
    }
    
    // CRITICAL: Verify the draft belongs to the authenticated user
    if (existingDraft.user_id !== userId) {
      return res.status(403).json({ error: 'Access denied: Draft belongs to another user' });
    }

    // Update the draft content in the database
    const updateQuery = `
      UPDATE auto_generated_drafts 
      SET subject = $1, body = $2, user_edited = true, edit_count = edit_count + 1
      WHERE id = $3
    `;
    await pool.query(updateQuery, [subject || existingDraft.subject, body || existingDraft.body, draftId]);

    // Update status if provided
    if (status && status !== existingDraft.status) {
      await autoGeneratedDraftModel.updateDraftStatus(draftId, status);
    }

    res.json({
      message: 'Auto-generated draft updated successfully',
      draftId: draftId,
      changes: {
        subjectChanged: subject && subject !== existingDraft.subject,
        bodyChanged: body && body !== existingDraft.body,
        statusChanged: status && status !== existingDraft.status
      }
    });
  } catch (error) {
    console.error('‚ùå Error updating auto-generated draft:', error);
    res.status(500).json({ error: 'Failed to update auto-generated draft' });
  }
});